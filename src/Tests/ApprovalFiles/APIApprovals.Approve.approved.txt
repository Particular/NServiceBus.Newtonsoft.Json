[assembly: System.Runtime.CompilerServices.InternalsVisibleToAttribute(@"Tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100dde965e6172e019ac82c2639ffe494dd2e7dd16347c34762a05732b492e110f2e4e2e1b5ef2d85c848ccfb671ee20a47c8d1376276708dc30a90ff1121b647ba3b7259a6bc383b2034938ef0e275b58b920375ac605076178123693c6c4f1331661a62eba28c249386855637780e3ff5f23a6d854700eaa6803ef48907513b92")]
namespace NServiceBus
{
    public class static NewtonsoftConfigurationExtensions
    {
        [System.ObsoleteAttribute("Use the equivalent method on NewtonsoftJsonSerializer instead. Will be treated as" +
            " an error from version 3.0.0. Will be removed in version 4.0.0.", false)]
        public static void ContentTypeKey(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftSerializer> config, string contentTypeKey) { }
        public static void ContentTypeKey(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftJsonSerializer> config, string contentTypeKey) { }
        [System.ObsoleteAttribute("Use the equivalent method on NewtonsoftJsonSerializer instead. Will be treated as" +
            " an error from version 3.0.0. Will be removed in version 4.0.0.", false)]
        public static void ReaderCreator(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftSerializer> config, System.Func<System.IO.Stream, Newtonsoft.Json.JsonReader> readerCreator) { }
        public static void ReaderCreator(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftJsonSerializer> config, System.Func<System.IO.Stream, Newtonsoft.Json.JsonReader> readerCreator) { }
        [System.ObsoleteAttribute("Use the equivalent method on NewtonsoftJsonSerializer instead. Will be treated as" +
            " an error from version 3.0.0. Will be removed in version 4.0.0.", false)]
        public static void Settings(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftSerializer> config, Newtonsoft.Json.JsonSerializerSettings settings) { }
        public static void Settings(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftJsonSerializer> config, Newtonsoft.Json.JsonSerializerSettings settings) { }
        [System.ObsoleteAttribute("Use the equivalent method on NewtonsoftJsonSerializer instead. Will be treated as" +
            " an error from version 3.0.0. Will be removed in version 4.0.0.", false)]
        public static void WriterCreator(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftSerializer> config, System.Func<System.IO.Stream, Newtonsoft.Json.JsonWriter> writerCreator) { }
        public static void WriterCreator(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftJsonSerializer> config, System.Func<System.IO.Stream, Newtonsoft.Json.JsonWriter> writerCreator) { }
    }
    public class NewtonsoftJsonSerializer : NServiceBus.Serialization.SerializationDefinition
    {
        public NewtonsoftJsonSerializer() { }
        public override System.Func<NServiceBus.MessageInterfaces.IMessageMapper, NServiceBus.Serialization.IMessageSerializer> Configure(NServiceBus.Settings.ReadOnlySettings settings) { }
    }
    [System.ObsoleteAttribute("Use `NewtonsoftJsonSerializer` instead. Will be treated as an error from version " +
        "3.0.0. Will be removed in version 4.0.0.", false)]
    public class NewtonsoftSerializer : NServiceBus.Serialization.SerializationDefinition
    {
        public NewtonsoftSerializer() { }
        public override System.Func<NServiceBus.MessageInterfaces.IMessageMapper, NServiceBus.Serialization.IMessageSerializer> Configure(NServiceBus.Settings.ReadOnlySettings settings) { }
    }
}