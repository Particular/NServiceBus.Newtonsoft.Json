[assembly: System.Runtime.CompilerServices.InternalsVisibleTo(@"Tests, PublicKey=00240000048000009400000006020000002400005253413100040000010001007f16e21368ff041183fab592d9e8ed37e7be355e93323147a1d29983d6e591b04282e4da0c9e18bd901e112c0033925eb7d7872c2f1706655891c5c9d57297994f707d16ee9a8f40d978f064ee1ffc73c0db3f4712691b23bf596f75130f4ec978cf78757ec034625a5f27e6bb50c618931ea49f6f628fd74271c32959efb1c5")]
namespace NServiceBus
{
    public static class NewtonsoftConfigurationExtensions
    {
        public static void ContentTypeKey(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftJsonSerializer> config, string contentTypeKey) { }
        [System.Obsolete("Use the equivalent method on NewtonsoftJsonSerializer instead. The member current" +
            "ly throws a NotImplementedException. Will be removed in version 4.0.0.", true)]
        public static void ContentTypeKey(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftSerializer> config, string contentTypeKey) { }
        public static void ReaderCreator(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftJsonSerializer> config, System.Func<System.IO.Stream, Newtonsoft.Json.JsonReader> readerCreator) { }
        [System.Obsolete("Use the equivalent method on NewtonsoftJsonSerializer instead. The member current" +
            "ly throws a NotImplementedException. Will be removed in version 4.0.0.", true)]
        public static void ReaderCreator(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftSerializer> config, System.Func<System.IO.Stream, Newtonsoft.Json.JsonReader> readerCreator) { }
        public static void Settings(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftJsonSerializer> config, Newtonsoft.Json.JsonSerializerSettings settings) { }
        [System.Obsolete("Use the equivalent method on NewtonsoftJsonSerializer instead. The member current" +
            "ly throws a NotImplementedException. Will be removed in version 4.0.0.", true)]
        public static void Settings(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftSerializer> config, Newtonsoft.Json.JsonSerializerSettings settings) { }
        public static void WriterCreator(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftJsonSerializer> config, System.Func<System.IO.Stream, Newtonsoft.Json.JsonWriter> writerCreator) { }
        [System.Obsolete("Use the equivalent method on NewtonsoftJsonSerializer instead. The member current" +
            "ly throws a NotImplementedException. Will be removed in version 4.0.0.", true)]
        public static void WriterCreator(this NServiceBus.Serialization.SerializationExtensions<NServiceBus.NewtonsoftSerializer> config, System.Func<System.IO.Stream, Newtonsoft.Json.JsonWriter> writerCreator) { }
    }
    public class NewtonsoftJsonSerializer : NServiceBus.Serialization.SerializationDefinition
    {
        public NewtonsoftJsonSerializer() { }
        public override System.Func<NServiceBus.MessageInterfaces.IMessageMapper, NServiceBus.Serialization.IMessageSerializer> Configure(NServiceBus.Settings.IReadOnlySettings settings) { }
    }
    [System.Obsolete("Use `NewtonsoftJsonSerializer` instead. Will be removed in version 4.0.0.", true)]
    public class NewtonsoftSerializer : NServiceBus.Serialization.SerializationDefinition
    {
        public NewtonsoftSerializer() { }
        public override System.Func<NServiceBus.MessageInterfaces.IMessageMapper, NServiceBus.Serialization.IMessageSerializer> Configure(NServiceBus.Settings.IReadOnlySettings settings) { }
    }
}